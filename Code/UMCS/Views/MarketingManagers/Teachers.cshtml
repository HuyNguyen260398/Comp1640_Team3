@model PagedList.IPagedList < UMCS.Models.Faculty1>
@using PagedList.Mvc;

<link href="~/Content/PagedListAdmin.css" rel="stylesheet" />

@{
    ViewBag.Title = "Teachers";
    Layout = "~/Views/Layout/MM.cshtml";
}

<div class="header-advance-area">
    <div class="breadcome-area">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="breadcome-list">
                        <div class="row">
                            @using (Html.BeginForm("Teachers", "MarketingManagers", FormMethod.Get))
                            {
                                <table class="table" style="margin-bottom: -2px">
                                    <tr style="border-top:hidden">
                                        <td><h3>Teachers List</h3></td>
                                        <td>@Html.TextBox("t_name", "", new { @placeholder = "Teacher's Name", @class = "form-control" })</td>
                                        <td>@Html.DropDownList("role", (IEnumerable<SelectListItem>)ViewBag.Role, htmlAttributes: new { @class = "form-control" })</td>
                                        <td>@Html.DropDownList("faculty", (IEnumerable<SelectListItem>)ViewBag.Faculty, htmlAttributes: new { @class = "form-control" })</td>
                                        <td>@Html.DropDownList("gender", (IEnumerable<SelectListItem>)ViewBag.Gender, htmlAttributes: new { @class = "form-control" })</td>
                                        <td style="width:30px"><input type="submit" value="Search" class="btn" style="background-color:#006DF0; color:white" /></td>
                                        <td><a href=@Url.Action("Teachers", "MarketingManagers") class="btn" style="background-color:#006DF0; color:white">Refresh</a></td>
                                    </tr>
                                </table>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="contacts-area mg-b-15">
    <div class="container-fluid">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                    <div class="hpanel hblue contact-panel contact-panel-cs responsive-mg-b-30">
                        <div class="panel-body custom-panel-jw">
                            <div class="social-media-in">
                                <a href="#"><i class="fa fa-facebook"></i></a>
                                <a href="#"><i class="fa fa-twitter"></i></a>
                                <a href="#"><i class="fa fa-pinterest"></i></a>
                            </div>
                            <img alt="logo" class="img-circle m-b" src="@item.Image" style="width:76px; height:76px">
                            <h3><a href="">@(item.FirstName + " " + item.LastName)</a></h3>
                            <p class="all-pro-ad">@item.Address</p>
                            <p>
                                Lorem ipsum dolor sit amet of, consectetur adipiscing elitable. Vestibulum tincidunt est vitae ultrices accumsan.
                            </p>
                        </div>
                        <div class="panel-footer contact-footer">
                            <a href="#" class="btn" style="color:white; background-color:#006DF0; width:90%">Read More</a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row" style="margin-left: 30px; margin-top: 40px">
            <h6 style="color:#006DF0; font-size:15px">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</h6>

            @Html.PagedListPager(Model, page => Url.Action("Teachers", new
       {
           page,
           t_name = Request.QueryString["t_name"],
           role = Request.QueryString["role"],
           faculty = Request.QueryString["faculty"],
           gender = Request.QueryString["gender"],
       }),
                                       new PagedListRenderOptions
                                       {
                                           DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                           DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                           MaximumPageNumbersToDisplay = 3
                                       })
        </div>
    </div>
</div>