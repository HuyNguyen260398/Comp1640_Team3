@model PagedList.IPagedList<UMCS.Models.Contribution>
@using PagedList.Mvc;

<link href="~/Content/PagedListAdmin.css" rel="stylesheet" />

@{
    ViewBag.Title = "ContributionsList";
    Layout = "~/Views/Layout/MM.cshtml";

    int i = 0;
}


<div class="product-status mg-b-15">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-top: 20px">
                <div class="product-status-wrap">
                    <h4>Students' Contributions List</h4>
                    <div class="add-product">
                        <a href="@Url.Action("DownloadZip", "MarketingManagers", new { id = ViewBag.FID})">Download All</a>
                    </div>
                    <div class="asset-inner">
                        <table>
                            <tr>
                                <th>No</th>
                                <th>Type</th>
                                <th>File Name</th>
                                <th>Status</th>
                                <th>Date Submit</th>
                                <th>Last Update</th>
                            </tr>
                            @foreach (var item in Model)
                            {
                                i += 1;
                                <tr>
                                    <td>@i</td>
                                    @{
                                        var image = item.ArchiveLink;

                                        if (item.Type == "Document")
                                        {
                                            switch (item.FileType)
                                            {
                                                case ".doc":
                                                    image = "/Avatars/doc.png";
                                                    break;
                                                case ".docx":
                                                    image = "/Avatars/docx.png";
                                                    break;
                                                case ".pdf":
                                                    image = "/Avatars/pdf.jpg";
                                                    break;
                                            }
                                            <td><img src=@image alt="" /></td>
                                        }
                                        else
                                        {
                                            image = "/Files/" + item.Title + item.FileType;
                                            <td><img src=@image alt="" /></td>
                                        }
                                    }
                                    <td>@item.Title</td>
                                    <td>
                                        @switch (item.Status)
                                        {
                                            case "Selected":
                                                <button class="pd-setting">Selected</button>
                                                break;
                                            case "Commented":
                                                <button class="ps-setting">Commented</button>
                                                break;
                                        }
                                    </td>
                                    <td>@item.DateSubmit</td>
                                    <td>@item.LastUpdate</td>
                                </tr>
                            }

                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="margin-left: 30px; margin-top: 20px">
            <h6 style="color:#006DF0; font-size:15px">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</h6>

            @Html.PagedListPager(Model, page => Url.Action("Teachers", new
       {
           page,
       }),
                                       new PagedListRenderOptions
                                       {
                                           DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                           DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                           MaximumPageNumbersToDisplay = 3
                                       })
        </div>
    </div>
</div>